{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/client-services.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<app-clients></app-clients>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: [ './app.component.css' ]\n})\nexport class AppComponent {\n\ttitle = 'app works';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClientServicesService } from './services/client-services.service';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [ AppComponent, ClientsComponent, NavbarComponent ],\n\timports: [ BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule ],\n\tproviders: [ ClientServicesService ],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy9jbGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"client-form\\\">\\n  <div *ngIf=\\\"isEdit\\\">\\n    <form class=\\\"card card-body bg-light\\\" (submit)=\\\"onEditSubmit()\\\">\\n      <!-- Edit form -->\\n      <h3>Edit Client</h3>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"first_name\\\">FirstName</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"first_name\\\" id=\\\"first_name\\\" placeholder=\\\"Enter your name\\\"\\n          [(ngModel)]=\\\"first_name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"last_name\\\">Last Name</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"last_name\\\" id=\\\"last_name\\\" placeholder=\\\"Enter your last_name\\\"\\n          [(ngModel)]=\\\"last_name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter your email\\\"\\n          [(ngModel)]=\\\"email\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">phone</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"phone\\\" id=\\\"phone\\\" placeholder=\\\"Enter your phone\\\"\\n          [(ngModel)]=\\\"phone\\\">\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n  </div>\\n  <!-- End of Edit Form -->\\n  <!-- add Form -->\\n  <div *ngIf=\\\"!isEdit\\\">\\n    <form class=\\\"card card-body bg-light\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\n      <h3>Add Client</h3>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"first_name\\\">FirstName</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"first_name\\\" id=\\\"first_name\\\" placeholder=\\\"Enter your name\\\"\\n          [(ngModel)]=\\\"first_name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"last_name\\\">Last Name</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"last_name\\\" id=\\\"last_name\\\" placeholder=\\\"Enter your last_name\\\"\\n          [(ngModel)]=\\\"last_name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter your email\\\"\\n          [(ngModel)]=\\\"email\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">phone</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"phone\\\" id=\\\"phone\\\" placeholder=\\\"Enter your phone\\\"\\n          [(ngModel)]=\\\"phone\\\">\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n  </div>\\n</div>\\n<!-- End of add Form -->\\n<!-- table to show Clients -->\\n<div class=\\\"container\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>First Name</th>\\n        <th>Last Name</th>\\n        <th> Email</th>\\n        <th>Phone</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let client of clients\\\">\\n        <td>{{client.first_name}}</td>\\n        <td>{{client.last_name}}</td>\\n        <td>{{client.email}}</td>\\n        <td>{{client.phone}}</td>\\n        <td> <a (click)=\\\"onEditClick(client)\\\" href=\\\"#\\\" class=\\\"btn btn-warning\\\">Edit</a> </td>\\n        <td> <a (click)=\\\"onDeleteClick(client._id)\\\" href=\\\"#\\\" class=\\\"btn btn-danger\\\">delete</a> </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <!-- End of table -->\\n</div>\\n\"","import { ClientServicesService } from './../../services/client-services.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-clients',\n\ttemplateUrl: './clients.component.html',\n\tstyleUrls: [ './clients.component.css' ]\n})\nexport class ClientsComponent implements OnInit {\n\tclients;\n\t_id;\n\tfirst_name;\n\tlast_name;\n\temail;\n\tphone;\n\tisEdit;\n\n\tconstructor(private clientser: ClientServicesService) {}\n\n\tonAddSubmit() {\n\t\tconsole.log('in submit');\n\n\t\tlet newClient = {\n\t\t\tfirst_name: this.first_name,\n\t\t\tlast_name: this.last_name,\n\t\t\temail: this.email,\n\t\t\tphone: this.phone\n\t\t};\n\n\t\tthis.clientser.saveClient(newClient).subscribe((client) => {\n\t\t\tconsole.log(client);\n\t\t\tthis.clients.push(client);\n\t\t\tthis.first_name = '';\n\t\t\tthis.last_name = '';\n\t\t\tthis.email = '';\n\t\t\tthis.phone = '';\n\t\t});\n\t}\n\n\tonEditClick(client) {\n\t\tthis.isEdit = true;\n\t\tthis.first_name = client.first_name;\n\t\tthis.last_name = client.last_name;\n\t\tthis.email = client.email;\n\t\tthis.phone = client.phone;\n\t\tthis._id = client._id;\n\t}\n\n\tonEditSubmit() {\n\t\tlet updClient = {\n\t\t\tfirst_name: this.first_name,\n\t\t\tlast_name: this.last_name,\n\t\t\temail: this.email,\n\t\t\tphone: this.phone,\n\t\t\t_id: this._id\n\t\t};\n\n\t\tthis.clientser.updateClient(updClient).subscribe((client) => {\n\t\t\tfor (let i = 0; i < this.clients.length; i++) {\n\t\t\t\tif (client['id'] == this.clients[i]._id) {\n\t\t\t\t\tthis.clients.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(client);\n\n\t\t\tthis.clients.push(client);\n\t\t\tthis.myfun();\n\t\t});\n\t}\n\n\tonDeleteClick(id) {\n\t\tthis.clientser.deleteClient(id).subscribe((client) => {\n\t\t\t// console.log(client);\n\t\t\tthis.myfun();\n\t\t});\n\t}\n\n\tmyfun() {\n\t\tthis.clientser.getClient().subscribe(\n\t\t\t(clients) => {\n\t\t\t\tthis.clients = clients;\n\t\t\t\t// console.log(clients);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\t\tthis.myfun();\n\n\t\tthis.isEdit = false;\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"/\\\" class=\\\"navbar-brand\\\">ClientKeeper</a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// import 'rxjs/add';\n\n// import { map } from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ClientServicesService {\n\tprivate url = 'http://localhost:3000/';\n\tconstructor(private http: HttpClient) {}\n\n\tgetClient() {\n\t\treturn this.http.get(this.url + 'api/clients');\n\t}\n\n\tsaveClient(client) {\n\t\tlet headers = new HttpHeaders();\n\t\theaders.append('Content-Type', 'application/json');\n\t\tconsole.log(headers);\n\n\t\treturn this.http.post(this.url + 'api/clients', client, { headers: headers });\n\t\t// return this.http.post(this.url + 'api/clients', client);\n\t}\n\n\tupdateClient(client) {\n\t\tlet headers = new HttpHeaders();\n\t\theaders.append('Content-Type', 'application/json');\n\t\tconsole.log(headers);\n\n\t\treturn this.http.put(this.url + 'api/clients/' + client._id, client, { headers: headers });\n\t\t// return this.http.put(this.url + 'api/clients'+ client._id, client, client);\n\t}\n\n\tdeleteClient(id) {\n\t\tlet headers = new HttpHeaders();\n\t\theaders.append('Content-Type', 'application/json');\n\t\tconsole.log(headers);\n\n\t\treturn this.http.delete(this.url + 'api/clients/' + id, { headers: headers });\n\t\t// return this.http.delete(this.url + 'api/clients'+ id, client);\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}